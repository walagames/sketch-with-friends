import { motion, AnimatePresence } from "framer-motion";
import { useState, useEffect, forwardRef } from "react";
import { SoundEffect, useSound } from "@/providers/sound-provider";

// const textVariants = {
// 	hidden: { pathLength: 0, y: 2, x: 3, fillOpacity: 0, opacity: 0 },
// 	visible: (i: number) => {
// 		const delay = (i - 0.4) * 0.5 + 0.25;
// 		return {
// 			opacity: 1,
// 			pathLength: 1,
// 			y: 0,
// 			x: 0,
// 			fillOpacity: 1,
// 			transition: {
// 				opacity: {
// 					type: "spring",
// 					stiffness: 500,
// 					damping: 50,
// 					mass: 1,
// 					delay: delay,
// 				},
// 				pathLength: {
// 					type: "spring",
// 					stiffness: 500,
// 					damping: 50,
// 					mass: 1,
// 					delay: delay,
// 				},
// 				fillOpacity: {
// 					type: "spring",
// 					stiffness: 500,
// 					damping: 50,
// 					mass: 1,
// 					delay: delay + 0.5,
// 				},
// 				x: {
// 					type: "spring",
// 					stiffness: 500,
// 					damping: 50,
// 					mass: 1,
// 					delay: delay + 0.2,
// 				},
// 				y: {
// 					type: "spring",
// 					stiffness: 500,
// 					damping: 50,
// 					mass: 1,
// 					delay: delay + 0.2,
// 				},
// 			},
// 		};
// 	},
// };

const textVariants = {
	hidden: { pathLength: 0, y: 10, x: 15, fillOpacity: 0, opacity: 0 },
	visible: (i: number) => {
		const delay = (i - 0.4) * 0.5 + 0.25;
		return {
			opacity: 1,
			pathLength: 1,
			y: 0,
			x: 0,
			fillOpacity: 1,
			transition: {
				opacity: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay,
				},
				pathLength: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay,
				},
				fillOpacity: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay + 0.5,
				},
				x: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay + 0.2,
				},
				y: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay + 0.2,
				},
			},
		};
	},
	exit: (i: number) => {
		const delay = i * 0.2;
		return {
			opacity: 0,
			pathLength: 0,
			y: 2,
			x: -3,
			fillOpacity: 0,
			transition: {
				opacity: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay,
				},
				pathLength: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay,
				},
				fillOpacity: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay + 0.2,
				},
				x: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay + 0.5,
				},
				y: {
					type: "spring",
					stiffness: 500,
					damping: 50,
					mass: 1,
					delay: delay + 0.5,
				},
			},
		};
	},
};

export const AnimatedSketchText = forwardRef<
	SVGSVGElement,
	React.ComponentProps<typeof motion.svg>
>((props, ref) => {
	const play = useSound();
	useEffect(() => {
		const timeout = setTimeout(() => {
			play(SoundEffect.SCRIBBLE);
		}, 1200);
		return () => clearTimeout(timeout);
	}, []);

	const strokeWidth = "0.16px";
	return (
		<motion.svg
			{...props}
			ref={ref}
			initial="hidden"
			animate="visible"
			exit="exit"
			fill="currentColor"
			viewBox="0 0 242 56"
			// viewBox="0 0 224 56"
		>
			<motion.path
				fill="currentColor"
				strokeWidth={strokeWidth}
				stroke="currentColor"
				strokeLinecap="round"
				variants={textVariants}
				custom={0.4}
				d="M184.817 55V0.296875H198.563V8.06641C198.563 11.043 198.493 13.5273 198.352 15.5195C198.212 17.5117 198.095 19.0352 198.001 20.0898H198.634C199.946 18.0273 201.493 16.5742 203.274 15.7305C205.079 14.8867 207.188 14.4648 209.602 14.4648C212.204 14.4648 214.559 14.9688 216.669 15.9766C218.802 16.9844 220.501 18.5547 221.766 20.6875C223.055 22.8203 223.7 25.6211 223.7 29.0898V55H209.884V33.2734C209.884 27.9297 208.302 25.2578 205.138 25.2578C202.63 25.2578 200.907 26.3125 199.97 28.4219C199.032 30.5312 198.563 33.5547 198.563 37.4922V55H184.817Z"
			/>
			<motion.path
				fill="currentColor"
				strokeWidth={strokeWidth}
				stroke="currentColor"
				strokeLinecap="round"
				variants={textVariants}
				custom={0.5}
				d="M168.465 55.7031C162.418 55.7031 157.59 54.0742 153.981 50.8164C150.395 47.5586 148.602 42.3789 148.602 35.2773C148.602 30.4492 149.516 26.5117 151.344 23.4648C153.172 20.3945 155.657 18.1328 158.797 16.6797C161.938 15.2031 165.524 14.4648 169.555 14.4648C171.993 14.4648 174.301 14.7461 176.481 15.3086C178.684 15.8477 180.723 16.5742 182.598 17.4883L178.555 27.6484C176.915 26.9219 175.368 26.3477 173.915 25.9258C172.485 25.4805 171.032 25.2578 169.555 25.2578C167.493 25.2578 165.805 26.0781 164.493 27.7188C163.204 29.3359 162.559 31.832 162.559 35.207C162.559 38.6523 163.204 41.1133 164.493 42.5898C165.805 44.043 167.516 44.7695 169.625 44.7695C171.594 44.7695 173.575 44.4648 175.567 43.8555C177.559 43.2227 179.446 42.3555 181.227 41.2539V52.1875C179.54 53.2891 177.676 54.1562 175.637 54.7891C173.598 55.3984 171.208 55.7031 168.465 55.7031Z"
			/>
			<motion.path
				fill="currentColor"
				strokeWidth={strokeWidth}
				stroke="currentColor"
				strokeLinecap="round"
				variants={textVariants}
				custom={0.6}
				d="M141.039 44.8398C142.234 44.8398 143.359 44.7109 144.414 44.4531C145.469 44.1953 146.547 43.8672 147.649 43.4688V53.4883C146.172 54.1211 144.59 54.6484 142.902 55.0703C141.215 55.4922 139.082 55.7031 136.504 55.7031C133.856 55.7031 131.57 55.293 129.649 54.4727C127.68 53.6523 126.156 52.2578 125.078 50.2891C124 48.2969 123.461 45.4961 123.461 41.8867V25.4688H118.645V19.8789L124.762 15.5547L128.277 7.1875H137.277V15.168H147.086V25.4688H137.277V40.9727C137.277 43.5508 138.531 44.8398 141.039 44.8398Z"
			/>
			<motion.path
				fill="currentColor"
				strokeWidth={strokeWidth}
				stroke="currentColor"
				strokeLinecap="round"
				variants={textVariants}
				custom={0.7}
				d="M99.2694 14.4648C105.082 14.4648 109.664 15.9766 113.016 19C116.391 22.0234 118.078 26.582 118.078 32.6758V38.793H93.5038C93.5975 40.8555 94.371 42.5664 95.8241 43.9258C97.3007 45.2617 99.4335 45.9297 102.223 45.9297C104.73 45.9297 107.016 45.6953 109.078 45.2266C111.141 44.7344 113.273 43.9609 115.476 42.9062V52.7852C113.555 53.793 111.445 54.5312 109.148 55C106.875 55.4688 104.016 55.7031 100.57 55.7031C96.5389 55.7031 92.953 55 89.8124 53.5938C86.6718 52.1875 84.1874 49.9844 82.3593 46.9844C80.5311 43.9844 79.6171 40.1055 79.6171 35.3477C79.6171 30.6133 80.4491 26.6875 82.1132 23.5703C83.7772 20.4766 86.0741 18.1914 89.0038 16.7148C91.9569 15.2148 95.3788 14.4648 99.2694 14.4648ZM99.7616 23.8164C98.1444 23.8164 96.7968 24.3203 95.7186 25.3281C94.6405 26.3359 93.996 27.9414 93.785 30.1445H105.598C105.551 28.3867 105.035 26.8984 104.051 25.6797C103.066 24.4375 101.637 23.8164 99.7616 23.8164Z"
			/>
			<motion.path
				fill="currentColor"
				strokeWidth={strokeWidth}
				stroke="currentColor"
				strokeLinecap="round"
				variants={textVariants}
				custom={0.7}
				d="M39.6753 55V0.296875H53.4917V21.8125C53.4917 23.4531 53.4214 25.2578 53.2808 27.2266C53.1401 29.1719 52.9526 30.9648 52.7183 32.6055H52.9995C52.9995 32.6055 53.0581 32.5234 53.1753 32.3594C53.2925 32.1719 53.4683 31.8906 53.7026 31.5156C54.1714 30.8125 54.7339 29.9805 55.3901 29.0195C56.0464 28.0586 56.6675 27.1914 57.2534 26.418L66.1831 15.168H81.5112L67.6948 32.1133L82.355 55H66.6753L57.9565 40.7266L53.4917 44.1367V55H39.6753Z"
			/>
			<motion.path
				fill="currentColor"
				strokeWidth={strokeWidth}
				stroke="currentColor"
				strokeLinecap="round"
				variants={textVariants}
				custom={0.7}
				d="M36.8586 39.3906C36.8586 42.2031 36.1555 44.8398 34.7492 47.3008C33.3195 49.7852 31.1281 51.8125 28.175 53.3828C25.2219 54.9297 21.4016 55.7031 16.7141 55.7031C14.3469 55.7031 12.2961 55.5977 10.5617 55.3867C8.80389 55.1758 7.15155 54.8359 5.60468 54.3672C4.08124 53.875 2.49921 53.2422 0.858582 52.4688V40.0938C3.64764 41.4766 6.44843 42.543 9.26093 43.293C12.0969 44.043 14.675 44.418 16.9953 44.418C19.0578 44.418 20.5695 44.0664 21.5305 43.3633C22.4914 42.6367 22.9719 41.7109 22.9719 40.5859C22.9719 39.2266 22.2687 38.1484 20.8625 37.3516C20.1359 36.9531 19.175 36.4609 17.9797 35.875C16.7844 35.2656 15.3547 34.5859 13.6906 33.8359C12.4016 33.25 11.2062 32.6523 10.1047 32.043C9.00311 31.4102 7.98358 30.7539 7.04608 30.0742C5.17108 28.7383 3.72968 27.1094 2.72186 25.1875C1.71405 23.2656 1.21014 20.8398 1.21014 17.9102C1.21014 14.582 2.03046 11.8164 3.67108 9.61328C5.31171 7.38672 7.57343 5.71094 10.4562 4.58594C13.3625 3.4375 16.7375 2.86328 20.5812 2.86328C23.9562 2.86328 26.9797 3.25 29.6516 4.02344C32.3469 4.79688 34.7492 5.64062 36.8586 6.55469L32.6047 17.2773C30.4016 16.2695 28.2336 15.4727 26.1008 14.8867C23.968 14.2773 21.9875 13.9727 20.1594 13.9727C18.3312 13.9727 17.007 14.2891 16.1867 14.9219C15.3664 15.5312 14.9562 16.3164 14.9562 17.2773C14.9562 18.0977 15.2726 18.8125 15.9055 19.4219C16.5383 20.0547 17.7219 20.8047 19.4562 21.6719C21.2141 22.5391 23.0773 23.4297 25.0461 24.3438C26.2883 24.9297 27.4484 25.5273 28.5266 26.1367C29.6047 26.7227 30.5773 27.3438 31.4445 28C33.1789 29.2891 34.5148 30.8477 35.4523 32.6758C36.3898 34.5039 36.8586 36.7422 36.8586 39.3906Z"
			/>
			<motion.path
				fill="currentColor"
				strokeWidth={strokeWidth}
				stroke="currentColor"
				strokeLinecap="round"
				variants={textVariants}
				custom={0.8}
				d="M226.552 3.60156H241.739L239.946 36.8594H228.345L226.552 3.60156ZM226.692 49.1641C226.692 46.6797 227.419 44.9336 228.872 43.9258C230.349 42.918 232.095 42.4141 234.11 42.4141C236.079 42.4141 237.778 42.918 239.208 43.9258C240.661 44.9336 241.388 46.6797 241.388 49.1641C241.388 51.5078 240.661 53.2188 239.208 54.2969C237.778 55.3516 236.079 55.8789 234.11 55.8789C232.095 55.8789 230.349 55.3516 228.872 54.2969C227.419 53.2188 226.692 51.5078 226.692 49.1641Z"
			/>
			{/* <svg
				width="242"
				height="56"
				fill="none"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path
					d="M226.552 3.60156H241.739L239.946 36.8594H228.345L226.552 3.60156ZM226.692 49.1641C226.692 46.6797 227.419 44.9336 228.872 43.9258C230.349 42.918 232.095 42.4141 234.11 42.4141C236.079 42.4141 237.778 42.918 239.208 43.9258C240.661 44.9336 241.388 46.6797 241.388 49.1641C241.388 51.5078 240.661 53.2188 239.208 54.2969C237.778 55.3516 236.079 55.8789 234.11 55.8789C232.095 55.8789 230.349 55.3516 228.872 54.2969C227.419 53.2188 226.692 51.5078 226.692 49.1641Z"
					fill="#FBF7F2"
				/>
				<path
					d="M184.536 55V0.296875H198.282V8.06641C198.282 11.043 198.212 13.5273 198.071 15.5195C197.93 17.5117 197.813 19.0352 197.719 20.0898H198.352C199.665 18.0273 201.212 16.5742 202.993 15.7305C204.797 14.8867 206.907 14.4648 209.321 14.4648C211.922 14.4648 214.278 14.9688 216.387 15.9766C218.52 16.9844 220.219 18.5547 221.485 20.6875C222.774 22.8203 223.419 25.6211 223.419 29.0898V55H209.602V33.2734C209.602 27.9297 208.02 25.2578 204.856 25.2578C202.348 25.2578 200.626 26.3125 199.688 28.4219C198.751 30.5312 198.282 33.5547 198.282 37.4922V55H184.536Z"
					fill="#FBF7F2"
				/>
				<path
					d="M168.184 55.7031C162.137 55.7031 157.309 54.0742 153.7 50.8164C150.114 47.5586 148.321 42.3789 148.321 35.2773C148.321 30.4492 149.235 26.5117 151.063 23.4648C152.891 20.3945 155.375 18.1328 158.516 16.6797C161.657 15.2031 165.242 14.4648 169.274 14.4648C171.711 14.4648 174.02 14.7461 176.2 15.3086C178.403 15.8477 180.442 16.5742 182.317 17.4883L178.274 27.6484C176.633 26.9219 175.086 26.3477 173.633 25.9258C172.203 25.4805 170.75 25.2578 169.274 25.2578C167.211 25.2578 165.524 26.0781 164.211 27.7188C162.922 29.3359 162.278 31.832 162.278 35.207C162.278 38.6523 162.922 41.1133 164.211 42.5898C165.524 44.043 167.235 44.7695 169.344 44.7695C171.313 44.7695 173.293 44.4648 175.285 43.8555C177.278 43.2227 179.164 42.3555 180.946 41.2539V52.1875C179.258 53.2891 177.395 54.1562 175.356 54.7891C173.317 55.3984 170.926 55.7031 168.184 55.7031Z"
					fill="#FBF7F2"
				/>
				<path
					d="M140.758 44.8398C141.953 44.8398 143.078 44.7109 144.133 44.4531C145.188 44.1953 146.266 43.8672 147.367 43.4688V53.4883C145.891 54.1211 144.309 54.6484 142.621 55.0703C140.934 55.4922 138.801 55.7031 136.223 55.7031C133.574 55.7031 131.289 55.293 129.367 54.4727C127.398 53.6523 125.875 52.2578 124.797 50.2891C123.719 48.2969 123.18 45.4961 123.18 41.8867V25.4688H118.363V19.8789L124.48 15.5547L127.996 7.1875H136.996V15.168H146.805V25.4688H136.996V40.9727C136.996 43.5508 138.25 44.8398 140.758 44.8398Z"
					fill="#FBF7F2"
				/>
				<path
					d="M98.988 14.4648C104.8 14.4648 109.383 15.9766 112.734 19C116.109 22.0234 117.797 26.582 117.797 32.6758V38.793H93.2224C93.3161 40.8555 94.0895 42.5664 95.5427 43.9258C97.0192 45.2617 99.152 45.9297 101.941 45.9297C104.449 45.9297 106.734 45.6953 108.797 45.2266C110.859 44.7344 112.992 43.9609 115.195 42.9062V52.7852C113.273 53.793 111.164 54.5312 108.867 55C106.593 55.4688 103.734 55.7031 100.289 55.7031C96.2575 55.7031 92.6716 55 89.5309 53.5938C86.3903 52.1875 83.9059 49.9844 82.0778 46.9844C80.2497 43.9844 79.3356 40.1055 79.3356 35.3477C79.3356 30.6133 80.1677 26.6875 81.8317 23.5703C83.4958 20.4766 85.7927 18.1914 88.7224 16.7148C91.6755 15.2148 95.0974 14.4648 98.988 14.4648ZM99.4802 23.8164C97.863 23.8164 96.5153 24.3203 95.4372 25.3281C94.3591 26.3359 93.7145 27.9414 93.5036 30.1445H105.316C105.269 28.3867 104.754 26.8984 103.769 25.6797C102.785 24.4375 101.355 23.8164 99.4802 23.8164Z"
					fill="#FBF7F2"
				/>
				<path
					d="M39.3939 55V0.296875H53.2103V21.8125C53.2103 23.4531 53.14 25.2578 52.9994 27.2266C52.8588 29.1719 52.6713 30.9648 52.4369 32.6055H52.7181C52.7181 32.6055 52.7767 32.5234 52.8939 32.3594C53.0111 32.1719 53.1869 31.8906 53.4213 31.5156C53.89 30.8125 54.4525 29.9805 55.1088 29.0195C55.765 28.0586 56.3861 27.1914 56.972 26.418L65.9017 15.168H81.2299L67.4135 32.1133L82.0736 55H66.3939L57.6752 40.7266L53.2103 44.1367V55H39.3939Z"
					fill="#FBF7F2"
				/>
				<path
					d="M36.5772 39.3906C36.5772 42.2031 35.8741 44.8398 34.4678 47.3008C33.0381 49.7852 30.8467 51.8125 27.8936 53.3828C24.9405 54.9297 21.1202 55.7031 16.4327 55.7031C14.0655 55.7031 12.0147 55.5977 10.2803 55.3867C8.52252 55.1758 6.87018 54.8359 5.3233 54.3672C3.79987 53.875 2.21783 53.2422 0.577209 52.4688V40.0938C3.36627 41.4766 6.16705 42.543 8.97955 43.293C11.8155 44.043 14.3936 44.418 16.7139 44.418C18.7764 44.418 20.2881 44.0664 21.2491 43.3633C22.21 42.6367 22.6905 41.7109 22.6905 40.5859C22.6905 39.2266 21.9874 38.1484 20.5811 37.3516C19.8546 36.9531 18.8936 36.4609 17.6983 35.875C16.503 35.2656 15.0733 34.5859 13.4092 33.8359C12.1202 33.25 10.9249 32.6523 9.8233 32.043C8.72174 31.4102 7.70221 30.7539 6.76471 30.0742C4.88971 28.7383 3.4483 27.1094 2.44049 25.1875C1.43268 23.2656 0.928772 20.8398 0.928772 17.9102C0.928772 14.582 1.74908 11.8164 3.38971 9.61328C5.03033 7.38672 7.29205 5.71094 10.1749 4.58594C13.0811 3.4375 16.4561 2.86328 20.2999 2.86328C23.6749 2.86328 26.6983 3.25 29.3702 4.02344C32.0655 4.79688 34.4678 5.64062 36.5772 6.55469L32.3233 17.2773C30.1202 16.2695 27.9522 15.4727 25.8194 14.8867C23.6866 14.2773 21.7061 13.9727 19.878 13.9727C18.0499 13.9727 16.7256 14.2891 15.9053 14.9219C15.085 15.5312 14.6749 16.3164 14.6749 17.2773C14.6749 18.0977 14.9913 18.8125 15.6241 19.4219C16.2569 20.0547 17.4405 20.8047 19.1749 21.6719C20.9327 22.5391 22.796 23.4297 24.7647 24.3438C26.0069 24.9297 27.1671 25.5273 28.2452 26.1367C29.3233 26.7227 30.296 27.3438 31.1631 28C32.8975 29.2891 34.2335 30.8477 35.171 32.6758C36.1085 34.5039 36.5772 36.7422 36.5772 39.3906Z"
					fill="#FBF7F2"
				/>
			</svg> */}
		</motion.svg>
		// <motion.svg
		// 	{...props}
		// 	initial="hidden"
		// 	animate="visible"
		// 	exit="hidden"
		// 	viewBox="0 0 39 10"
		// 	fill="currentColor"
		// >
		// 	<motion.path
		// 		fill="currentColor"
		// 		strokeWidth={strokeWidth}
		// 		stroke="currentColor"
		// 		strokeLinecap="round"
		// 		variants={textVariants}
		// 		custom={0.4}
		// 		d="M3.108 9.144C2.396 9.144 1.804 8.964 1.332 8.604C0.859998 8.244 0.583998 7.756 0.503998 7.14H1.536C1.6 7.452 1.764 7.724 2.028 7.956C2.3 8.18 2.664 8.292 3.12 8.292C3.544 8.292 3.856 8.204 4.056 8.028C4.256 7.844 4.356 7.628 4.356 7.38C4.356 7.02 4.224 6.78 3.96 6.66C3.704 6.54 3.34 6.432 2.868 6.336C2.548 6.272 2.228 6.18 1.908 6.06C1.588 5.94 1.32 5.772 1.104 5.556C0.887998 5.332 0.779998 5.04 0.779998 4.68C0.779998 4.16 0.971998 3.736 1.356 3.408C1.748 3.072 2.276 2.904 2.94 2.904C3.572 2.904 4.088 3.064 4.488 3.384C4.896 3.696 5.132 4.144 5.196 4.728H4.2C4.16 4.424 4.028 4.188 3.804 4.02C3.588 3.844 3.296 3.756 2.928 3.756C2.568 3.756 2.288 3.832 2.088 3.984C1.896 4.136 1.8 4.336 1.8 4.584C1.8 4.824 1.924 5.012 2.172 5.148C2.428 5.284 2.772 5.4 3.204 5.496C3.572 5.576 3.92 5.676 4.248 5.796C4.584 5.908 4.856 6.08 5.064 6.312C5.28 6.536 5.388 6.864 5.388 7.296C5.396 7.832 5.192 8.276 4.776 8.628C4.368 8.972 3.812 9.144 3.108 9.144Z"
		// 	/>
		// 	<motion.path
		// 		fill="currentColor"
		// 		strokeWidth={strokeWidth}
		// 		stroke="currentColor"
		// 		strokeLinecap="round"
		// 		custom={0.5}
		// 		variants={textVariants}
		// 		d="M6.828 9V0.360001H7.836V5.556L10.272 3.048H11.508L8.868 5.736L11.844 9H10.56L7.836 5.916V9H6.828Z"
		// 	/>
		// 	<motion.path
		// 		fill="currentColor"
		// 		strokeWidth={strokeWidth}
		// 		stroke="currentColor"
		// 		strokeLinecap="round"
		// 		variants={textVariants}
		// 		custom={0.6}
		// 		d="M15.1173 9.144C14.5493 9.144 14.0453 9.016 13.6053 8.76C13.1653 8.496 12.8173 8.132 12.5613 7.668C12.3133 7.204 12.1893 6.656 12.1893 6.024C12.1893 5.4 12.3133 4.856 12.5613 4.392C12.8093 3.92 13.1533 3.556 13.5933 3.3C14.0413 3.036 14.5573 2.904 15.1413 2.904C15.7173 2.904 16.2133 3.036 16.6293 3.3C17.0533 3.556 17.3773 3.896 17.6013 4.32C17.8253 4.744 17.9373 5.2 17.9373 5.688C17.9373 5.776 17.9333 5.864 17.9253 5.952C17.9253 6.04 17.9253 6.14 17.9253 6.252H13.1853C13.2093 6.708 13.3133 7.088 13.4973 7.392C13.6893 7.688 13.9253 7.912 14.2053 8.064C14.4933 8.216 14.7973 8.292 15.1173 8.292C15.5333 8.292 15.8813 8.196 16.1613 8.004C16.4413 7.812 16.6453 7.552 16.7733 7.224H17.7693C17.6093 7.776 17.3013 8.236 16.8453 8.604C16.3973 8.964 15.8213 9.144 15.1173 9.144ZM15.1173 3.756C14.6373 3.756 14.2093 3.904 13.8333 4.2C13.4653 4.488 13.2533 4.912 13.1973 5.472H16.9413C16.9173 4.936 16.7333 4.516 16.3893 4.212C16.0453 3.908 15.6213 3.756 15.1173 3.756Z"
		// 	/>
		// 	<motion.path
		// 		fill="currentColor"
		// 		strokeWidth={strokeWidth}
		// 		stroke="currentColor"
		// 		strokeLinecap="round"
		// 		variants={textVariants}
		// 		custom={0.7}
		// 		d="M21.4261 9C20.8821 9 20.4541 8.868 20.1421 8.604C19.8301 8.34 19.6741 7.864 19.6741 7.176V3.9H18.6421V3.048H19.6741L19.8061 1.62H20.6821V3.048H22.4341V3.9H20.6821V7.176C20.6821 7.552 20.7581 7.808 20.9101 7.944C21.0621 8.072 21.3301 8.136 21.7141 8.136H22.3381V9H21.4261Z"
		// 	/>
		// 	<motion.path
		// 		fill="currentColor"
		// 		strokeWidth={strokeWidth}
		// 		stroke="currentColor"
		// 		strokeLinecap="round"
		// 		variants={textVariants}
		// 		custom={0.7}
		// 		d="M26.2867 9.144C25.7187 9.144 25.2067 9.016 24.7507 8.76C24.3027 8.496 23.9467 8.132 23.6827 7.668C23.4267 7.196 23.2987 6.648 23.2987 6.024C23.2987 5.4 23.4267 4.856 23.6827 4.392C23.9467 3.92 24.3027 3.556 24.7507 3.3C25.2067 3.036 25.7187 2.904 26.2867 2.904C26.9907 2.904 27.5827 3.088 28.0627 3.456C28.5507 3.824 28.8587 4.316 28.9867 4.932H27.9547C27.8747 4.564 27.6787 4.28 27.3667 4.08C27.0547 3.872 26.6907 3.768 26.2747 3.768C25.9387 3.768 25.6227 3.852 25.3267 4.02C25.0307 4.188 24.7907 4.44 24.6067 4.776C24.4227 5.112 24.3307 5.528 24.3307 6.024C24.3307 6.52 24.4227 6.936 24.6067 7.272C24.7907 7.608 25.0307 7.864 25.3267 8.04C25.6227 8.208 25.9387 8.292 26.2747 8.292C26.6907 8.292 27.0547 8.192 27.3667 7.992C27.6787 7.784 27.8747 7.492 27.9547 7.116H28.9867C28.8667 7.716 28.5627 8.204 28.0747 8.58C27.5867 8.956 26.9907 9.144 26.2867 9.144Z"
		// 	/>
		// 	<motion.path
		// 		fill="currentColor"
		// 		strokeWidth={strokeWidth}
		// 		stroke="currentColor"
		// 		strokeLinecap="round"
		// 		variants={textVariants}
		// 		custom={0.8}
		// 		d="M30.3944 9V0.360001H31.4024V4.068C31.6024 3.7 31.8864 3.416 32.2544 3.216C32.6224 3.008 33.0224 2.904 33.4544 2.904C34.1424 2.904 34.6944 3.12 35.1104 3.552C35.5264 3.976 35.7344 4.632 35.7344 5.52V9H34.7384V5.628C34.7384 4.388 34.2384 3.768 33.2384 3.768C32.7184 3.768 32.2824 3.956 31.9304 4.332C31.5784 4.7 31.4024 5.228 31.4024 5.916V9H30.3944Z"
		// 	/>
		// </motion.svg>
	);
});

const numberVariants = {
	initial: { opacity: 0, y: -100 },
	animate: { opacity: 1, y: 0 },
	exit: { opacity: 0, y: 100 },
};

function Number({ number }: { number: number }) {
	return (
		<motion.div
			className="text-9xl font-medium absolute top-1/2 left-1/2 w-min flex flex-col items-center justify-center z-10"
			layout
			initial="initial"
			animate="animate"
			exit="exit"
			variants={numberVariants}
			transition={{
				type: "spring",
				stiffness: 500,
				damping: 50,
				mass: 1,
			}}
		>
			<span className="text-7xl absolute -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 flex flex-col items-center justify-center">
				{number || <AnimatedSketchText className=" h-[4rem] text-black" />}
			</span>
		</motion.div>
	);
}

export function GameStartCountdown() {
	const [countdown, setCountdown] = useState(3);

	useEffect(() => {
		const interval = setInterval(() => {
			if (countdown > 0) {
				setCountdown((prev) => prev - 1);
			}
		}, 1000);
		return () => clearInterval(interval);
	}, [countdown]);

	return (
		<motion.div
			key="countdown"
			initial={{ opacity: 0, scale: 0.9 }}
			animate={{ opacity: 1, scale: 1 }}
			exit={{ opacity: 0, scale: 0.9 }}
			transition={{
				type: "spring",
				stiffness: 500,
				damping: 50,
				mass: 1,
			}}
			className="h-full w-full absolute inset-0 overflow-hidden z-10"
		>
			{/* <div className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 max-w-3xl w-full h-[500px] bg-secondary/95 blur-[100px]" /> */}

			<AnimatePresence mode="popLayout">
				<Number key={countdown} number={countdown} />
			</AnimatePresence>
		</motion.div>
	);
}
